@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage ProtectedLocalStore
@inject FileSystemService FileSystemService

@using System.Net.Http
@using System.Net.Http.Json
@using System.Net.Http.Headers;
@inject HttpClient Http

@code {
    [Required]
    [Parameter] public string Path { get; set; } = string.Empty;

    private Folder? currentFolder { get; set; }
    private ContentModel content { get; set; } = new();

    private class ContentModel {
        public List<Folder> folders { get; set; } = new();
        public List<Document> documents { get; set; } = new();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await SetUp();
            StateHasChanged();
        }
    }

    private async Task SetUp() {
        var result = await ProtectedLocalStore.GetAsync<string>("token");
        var token = result.Success ? result.Value : null;

        if (!FileSystemService.IsInitialized()) {
            await FileSystemService.InitializeFileSystemAsync(token);
        }

        currentFolder = FileSystemService.GetFolder(Path);

        if (currentFolder == null) {
            Console.WriteLine("cant find this folder");
            return;
        }


        if (token != null) {
            var req = new HttpRequestMessage(HttpMethod.Get, $"Folder/content/{currentFolder.id}");
            req.Headers.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var res = await Http.SendAsync(req);
            res.EnsureSuccessStatusCode();
            
            content = await res.Content.ReadFromJsonAsync<ContentModel>();
        }
    }
}

<div>
    <h3>@Path</h3>
    <ul>
        @foreach (var folder in content.folders) {
            <li>
                üìÅ@folder.name
            </li>
        }
        @foreach (var document in content.documents) {
            <li>
                üßæ@document.title
            </li>
        }

    </ul>
</div>